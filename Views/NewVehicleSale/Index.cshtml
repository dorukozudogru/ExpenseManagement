@model IEnumerable<ExpenseManagement.Models.NewVehicleSales>

@{
    ViewData["Title"] = "Sıfır Araç Satış";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-success">
                    <div class="card-header border-0">
                        <h3 class="card-title">
                            <strong>∑</strong>&nbsp;&nbsp;Yıllık Toplam Kâr
                        </h3>
                        <div class="card-tools">
                            <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                <i class="fas fa-plus"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body table-responsive">
                        <table id="generalTable2" class="table table-striped table-valign-middle">
                            <thead>
                                <tr>
                                    <th>
                                        Yıl
                                    </th>
                                    <th>
                                        Toplam Kâr Tutarı
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="card card-primary collapsed-card">
                    <div class="card-header border-0">
                        <h5 class="card-title">
                            <i class="fas fa-filter mr-1"></i>&nbsp;Filtreler
                        </h5>
                        <div class="card-tools">
                            <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                <i class="fas fa-plus"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Marka Adı</label>
                                    <select class="form-control" id="brand"></select>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Plaka</label>
                                    <input class="form-control" id="licencePlate" autocomplete="off" />
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Araç Satış Başlangıç Tarihi</label>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                                <input type="text" class="form-control float-right" id="datepicker" autocomplete="off" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Araç Satış Bitiş Tarihi</label>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                                <input type="text" class="form-control float-right" id="datepicker2" autocomplete="off" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Model Adı</label>
                                    <select class="form-control" id="model"></select>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Şase No</label>
                                    <input class="form-control" id="chassis" autocomplete="off" />
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="control-label">Satılan Ay</label>
                                            <select class="form-control" asp-items="@Html.GetEnumSelectList<ExpenseManagement.Enums.MonthEnum>()" id="monthId"></select>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">ÖTV Muaf Mı?</label>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">
                                                            <input type="checkbox" id="taxExempt">
                                                        </span>
                                                    </div>
                                                    <input type="text" class="form-control" disabled>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="control-label">Satış Fiyatı Tutar Aralığı</label>
                                    <input id="range_1" type="text" name="range_1" value="">
                                    <input hidden id="from" />
                                    <input hidden id="to" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    <input type="submit" value="Filtreyi Uygula" class="btn btn-success btn-block" onclick="getResult()" />
                                </div>
                                <div class="col-md-6">
                                    <input type="submit" value="Temizle" class="btn btn-danger btn-block" onclick="clearFilter()" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <h5 class="box-title">
                            <i class="fas fa-car"></i>&nbsp;Sıfır Araç Satış
                            <a class="btn btn-light text-primary btn-sm float-right" asp-controller="NewVehicleSale" asp-action="ExportSales" style="margin-left:10px"><i class="fa fa-download"></i>&nbsp;&nbsp;Dışa Aktar</a>
                            <a class="btn btn-light text-primary btn-sm float-right" asp-action="Create"><i class="fa fa-plus"></i>&nbsp;&nbsp;Yeni Oluştur</a>
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <div class="card-body">
                                <table id="ItemsTable" class="table table-bordered table-striped" width="100%">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Id)
                                            </th>
                                            <th>
                                                Araç Alış Id
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.VehiclePurchase.CarBrandName)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.VehiclePurchase.CarModel.Name)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.VehiclePurchase.Chassis)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.LicencePlate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Salesman)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.VehicleCost)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.SaleAmount)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.PurchaseDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.SaleDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.WarrantyPlus)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Description)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.TaxExempt)
                                            </th>
                                            <th>İşlemler</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    window.onload = function getAll() {
        $("#ItemsTable").DataTable({
            "language": {
                processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                zeroRecords: "Hiçbir kayıt bulunamadı.",
                emptyTable: "Kayıt bulunmamaktadır.",
                search: "Ara:",
                oPaginate: {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "»",
                    "sPrevious": "«"
                },
                sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
            },
            "processing": true,
            "serverSide": true,
            "searchDelay": 1200,
            "stateSave": true,
            "stateDuration": -1,
            "searching": false,
            "destroy": true,
            "order": [[ 0, "desc" ]],
            "ajax": {
                "url": "/NewVehicleSale/Post",
                "method": "POST"
            },
            "columns": [
                { "data": "id" },
                { "data": "vehiclePurchase.id" },
                {
                    "data": "vehiclePurchase.carModel.carBrand.name",
                    "orderable": false
                },
                {
                    "data": "vehiclePurchase.carModel.name",
                    "orderable": false
                },
                {
                    "data": "vehiclePurchase.chassis",
                    "orderable": false
                },
                {
                    "data": "licencePlate",
                    "orderable": false,
                    render: function (data, type, full, meta) {
                        if (data != null) {
                            return data;
                        }
                        else {
                            return "-";
                        }
                    }
                },
                {
                    "data": "salesman.name",
                    "orderable": false
                },
                {
                    "data": "vehicleCost",
                    "render": function (data, type, full, meta) {
                        return currency(full.vehicleCost, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.vehicleCostCurrencyName;
                    },
                    "orderable": false
                },
                {
                    "data": "saleAmount",
                    "render": function (data, type, full, meta) {
                        return currency(full.saleAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.saleAmountCurrencyName;
                    },
                    "orderable": false
                },
                {
                    "data": "purchaseDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    },
                    "orderable": false
                },
                {
                    "data": "saleDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    },
                    "orderable": false
                },
                {
                    "data": "warrantyPlus",
                    "orderable": false,
                    render: function (data, type, full, meta) {
                        if (data != null) {
                            return data;
                        }
                        else {
                            return "-";
                        }
                    }
                },
                {
                    "data": "description",
                    "orderable": false,
                    render: function (data, type, full, meta) {
                        if (data != null) {
                            return data;
                        }
                        else {
                            return "-";
                        }
                    }
                },
                {
                    "data": "taxExempt",
                    render: function (data, type, row) {
                        if (data == true) {
                            return "Evet";
                        }
                        else if (data == false) {
                            return "Hayır";
                        }
                    }
                },
                {
                    "data": "actionId", render: function (data, type, row) {
                        return '<div class="btn-group"><button type="button" class="btn" data-toggle="dropdown"><span class="fa fa-angle-down"></span></button></button><ul class="dropdown-menu dropdown-menu-right" style="border: 1px solid #00c0ef"> <a class="dropdown-item" href="NewVehicleSale/Edit/' + row.id + '">Güncelle</a> <a class="dropdown-item" href="NewVehicleSale/Details/' + row.id + '">Detaylar</a> <a class="dropdown-item" href="NewVehicleSale/Delete/' + row.id + '">Sil</a></ul></div>'
                    },
                    "orderable": false
                }
            ],
            "ordering": true,
            "paging": true,
            "pagingType": "simple_numbers",
            "pageLength": 100
        });

        $('#range_1').ionRangeSlider({
            min: 100000,
            max: 2000000,
            from: 180000,
            to: 800000,
            type: 'double',
            step: 1,
            prefix: '₺',
            prettify: false,
            hasGrid: true,
            onChange: function (data) {
                document.getElementById("from").value = data.from;
                document.getElementById("to").value = data.to;
            }
        });

        window.onload = brandLoad();

        function brandLoad() {
                $('#brand').html('');
                $.getJSON('@Url.Action("GetCarBrandsForFilters", "CarBrand")', function (result) {
                    for (var i = 0; i < result.length; i++) {
                        $("#brand").append("<option id='" + result[i].id + "'>" + result[i].name + "</option>")
                    }
                    showValue(result[0].id);
                })
        };

        $("#brand").on("change", function (e) {
            showValue(e.target.selectedOptions[0].id);
        });

        function showValue(brandId)
        {
            $('#model').html('');
            $.getJSON('@Url.Action("GetCarModelsByIdForFilters", "CarModel")' + "?Id=" + brandId, function (result) {
                for (var i = 0; i < result.length; i++) {
                    $("#model").append("<option id='" + result[i].id + "'>" + result[i].name + "</option>")
                }
            })
        }

        $('#taxExempt').attr('value', '9');

        $("#taxExempt").on('change', function () {
            if ($(this).is(':checked')) {
                $(this).attr('value', '1');
            } else {
                $(this).attr('value', '0');
            }
        });

        $("#generalTable2").DataTable({
        "language": {
            processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
            zeroRecords: "Hiçbir kayıt bulunamadı.",
            emptyTable: "Kayıt bulunmamaktadır.",
            search: "Ara:",
            oPaginate: {
                "sFirst": "İlk",
                "sLast": "Son",
                "sNext": "»",
                "sPrevious": "«"
            },
            sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
            sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
        },
        "processing": true,
        "serverSide": true,
        "searchDelay": 1200,
        "stateSave": true,
        "lengthChange": false,
        "searching": false,
        "stateDuration": -1,
        "ajax": {
            "url": "/NewVehicleSale/YearlyTotalPost",
            "method": "POST",
            "error": function (error) {
                $('#generalTable2 tbody')
                    .empty()
                    .append('<tr><td colspan="3" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
            }
        },
        "destroy": true,
        "columns": [
            {
                "data": "year",
                "orderable": false
            },
            {
                "data": "totalAmount",
                "render": function (data, type, full, meta) {
                    return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " ₺";
                },
                "orderable": false
            }
        ],
        "ordering": false,
        "pageLength": 3
        });
    };

    function clearFilter() {
        location.reload();
    }

    function getResult() {
        $("#ItemsTable").DataTable({
            "language": {
                processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                zeroRecords: "Hiçbir kayıt bulunamadı.",
                emptyTable: "Kayıt bulunmamaktadır.",
                search: "Ara:",
                oPaginate: {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "»",
                    "sPrevious": "«"
                },
                sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
            },
            "processing": true,
            "serverSide": true,
            "searchDelay": 1200,
            "stateSave": true,
            "stateDuration": -1,
            "destroy": true,
            "order": [[ 0, "desc" ]],
            "ajax": {
                "url": "/NewVehicleSale/Post?isFiltered=true"
                    + "&startDate=" + document.getElementById("datepicker").value
                    + "&finishDate=" + document.getElementById("datepicker2").value
                    + "&from=" + document.getElementById("from").value
                    + "&to=" + document.getElementById("to").value
                    + "&model=" + document.getElementById("model").value
                    + "&chassis=" + document.getElementById("chassis").value
                    + "&licencePlate=" + document.getElementById("licencePlate").value
                    + "&monthId=" + document.getElementById("monthId").value
                    + "&taxExempt=" + document.getElementById("taxExempt").value,
                "method": "POST"
            },
            "columns": [
                { "data": "id" },
                { "data": "vehiclePurchase.id" },
                {
                    "data": "vehiclePurchase.carModel.carBrand.name",
                    "orderable": false
                },
                {
                    "data": "vehiclePurchase.carModel.name",
                    "orderable": false
                },
                {
                    "data": "vehiclePurchase.chassis",
                    "orderable": false
                },
                {
                    "data": "licencePlate",
                    "orderable": false,
                    render: function (data, type, full, meta) {
                        if (data != null) {
                            return data;
                        }
                        else {
                            return "-";
                        }
                    }
                },
                {
                    "data": "salesman.name",
                    "orderable": false
                },
                {
                    "data": "vehicleCost",
                    "render": function (data, type, full, meta) {
                        return currency(full.vehicleCost, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.vehicleCostCurrencyName;
                    },
                    "orderable": false
                },
                {
                    "data": "saleAmount",
                    "render": function (data, type, full, meta) {
                        return currency(full.saleAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.saleAmountCurrencyName;
                    },
                    "orderable": false
                },
                {
                    "data": "purchaseDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    },
                    "orderable": false
                },
                {
                    "data": "saleDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    },
                    "orderable": false
                },
                {
                    "data": "warrantyPlus",
                    "orderable": false,
                    render: function (data, type, full, meta) {
                        if (data != null) {
                            return data;
                        }
                        else {
                            return "-";
                        }
                    }
                },
                {
                    "data": "description",
                    "orderable": false,
                    render: function (data, type, full, meta) {
                        if (data != null) {
                            return data;
                        }
                        else {
                            return "-";
                        }
                    }
                },
                {
                    "data": "taxExempt",
                    render: function (data, type, row) {
                        if (data == true) {
                            return "Evet";
                        }
                        else if (data == false) {
                            return "Hayır";
                        }
                    }
                },
                {
                    "data": "actionId", render: function (data, type, row) {
                        return '<div class="btn-group"><button type="button" class="btn" data-toggle="dropdown"><span class="fa fa-angle-down"></span></button></button><ul class="dropdown-menu dropdown-menu-right" style="border: 1px solid #00c0ef"> <a class="dropdown-item" href="NewVehicleSale/Edit/' + row.id + '">Güncelle</a> <a class="dropdown-item" href="NewVehicleSale/Details/' + row.id + '">Detaylar</a> <a class="dropdown-item" href="NewVehicleSale/Delete/' + row.id + '">Sil</a></ul></div>'
                    },
                    "orderable": false
                }
            ],
            "ordering": true,
            "paging": true,
            "pagingType": "simple_numbers",
            "pageLength": 100
        });
    }
</script>