@model IEnumerable<ExpenseManagement.Models.VehiclePurchases>

@{
    ViewData["Title"] = "Ana Sayfa";
}

<section class="content">
    <div class="container-fluid">
        @if (User.IsInRole("Standart") || User.IsInRole("Petrol") || User.IsInRole("Plaza"))
        {
            <div class="row">
                <div class="col-lg-6">
                    <div class="info-box mb-3 bg-danger">
                        <span class="info-box-icon"><i class="fas fa-credit-card"></i></span>
                        <div class="info-box-content">
                            <span class="info-box-text">@DateTime.Now.ToString("MMMM") Ayında Girilen Gider Sayısı</span>
                            <span class="info-box-number" id="monthlyExpenseCount"></span>
                        </div>
                    </div>
                    <div class="card card-danger">
                        <div class="card-header border-0">
                            <h3 class="card-title"><i class="nav-icon fas fa-credit-card"></i>&nbsp;&nbsp;Son 3 Ayda Sisteme Eklenen Gider Sayısı</h3>
                            <div class="card-tools">
                                <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table id="generalTable" class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>
                                            Ay
                                        </th>
                                        <th>
                                            Gider Kalemi
                                        </th>
                                        <th>
                                            Toplam Miktar
                                        </th>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="info-box mb-3 bg-success">
                        <span class="info-box-icon"><i class="fas fa-coins"></i></span>
                        <div class="info-box-content">
                            <span class="info-box-text">@DateTime.Now.ToString("MMMM") Ayında Girilen Gelir Sayısı</span>
                            <span class="info-box-number" id="monthlyIncomeCount"></span>
                        </div>
                    </div>
                    <div class="card card-success">
                        <div class="card-header border-0">
                            <h3 class="card-title"><i class="nav-icon fas fa-coins"></i>&nbsp;&nbsp;Son 3 Ayda Sisteme Eklenen Gelir Sayısı</h3>
                            <div class="card-tools">
                                <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table id="generalTable2" class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>
                                            Ay
                                        </th>
                                        <th>
                                            Gelir Kalemi
                                        </th>
                                        <th>
                                            Toplam Miktar
                                        </th>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (User.IsInRole("Admin") || User.IsInRole("Banaz") || User.IsInRole("Muhasebe"))
        {
            <div class="card card-danger">
                <div class="card-header border-0">
                    <div class="justify-content-between">
                        <div class="row align-items-center">
                            <div class="col-md-1">
                                <h5 class="card-title">
                                    <i class="fas fa-calendar-day"></i>&nbsp;&nbsp;Yıl Seçimi
                                </h5>
                            </div>
                            <div class="col-md-11">
                                <select class="form-control btn btn-default" id="year">
                                    <option></option>
                                    <option>2021</option>
                                    <option>2022</option>
                                    <option>2023</option>
                                    <option>2024</option>
                                    <option>2025</option>
                                    <option>2026</option>
                                    <option>2027</option>
                                    <option>2028</option>
                                    <option>2029</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="card card-danger">
                        <div class="card-header border-0">
                            <h3 class="card-title" id="yearTotalExpense"></h3>
                            <div class="card-tools">
                                <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table id="expenseTable" class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>
                                            Sektör/İş Kolu Adı
                                        </th>
                                        <th>
                                            Toplam Gider
                                        </th>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <td style="font-weight:bold">Toplam:</td>
                                        <td style="font-weight:bold" id="totalExpense"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card card-success">
                        <div class="card-header border-0">
                            <h3 class="card-title" id="yearTotalIncome"></h3>
                            <div class="card-tools">
                                <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table id="incomeTable" class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>
                                            Sektör/İş Kolu Adı
                                        </th>
                                        <th>
                                            Toplam Gelir
                                        </th>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <td style="font-weight:bold">Toplam:</td>
                                        <td style="font-weight:bold" id="totalIncome"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card card-primary">
                <div class="card-header border-0">
                    <div class="d-flex justify-content-between">
                        <h5 class="box-title">
                            <i class="fas fa-warehouse"></i>&nbsp;Ödeme Tarihi Gelen Araçlar
                        </h5>
                        <div class="card-tools">
                            <a class="btn btn-light text-primary btn-sm" asp-controller="VehiclePurchase" asp-action="ExportVehicles" style="margin-left:10px"><i class="fa fa-download"></i>&nbsp;&nbsp;Dışa Aktar</a>
                            <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive p-0">
                        <table id="ItemsTable" class="table table-striped table-valign-middle">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Id)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CarModel.CarBrand.Name)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CarModel.Name)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PurchaseDate)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ValorDate)
                                    </th>
                                    <th>
                                        Valör Bitiş Tarihi
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PaymentDate)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Chassis)
                                    </th>
                                    <th>
                                        Detaylar
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
</section>
<br />

@section Scripts{
<script src="~/js/datatables.min.js"></script>
<script src="~/js/moment.min.js"></script>
<script src="~/Content/NewSite/plugins/chart.js/Chart.min.js"></script>
<script>
    (function () {
        $.ajax({
            "url": "/Report/MonthlyCountReport",
            "method": "POST"
        }).done(function (response) {
            $('#monthlyExpenseCount').html(response[0]);
            $('#monthlyIncomeCount').html(response[1]);
        });

        $("#generalTable").DataTable({
            "language": {
                processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                zeroRecords: "Hiçbir kayıt bulunamadı.",
                emptyTable: "Kayıt bulunmamaktadır.",
                search: "Ara:",
                oPaginate: {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "»",
                    "sPrevious": "«"
                },
                sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
            },
            "info": false,
            "processing": true,
            "serverSide": true,
            "searchDelay": 1200,
            "stateSave": true,
            "lengthChange": false,
            "searching": false,
            "stateDuration": -1,
            "ajax": {
                "url": "/Report/MontlyExpensesReport",
                "method": "POST",
                "error": function (error) {
                    $('#generalTable tbody')
                        .empty()
                        .append('<tr><td colspan="3" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
                }
            },
            "destroy": true,
            "columns": [
                {
                    "data": "monthName",
                    "orderable": false
                },
                {
                    "data": "count",
                    "orderable": false
                },
                {
                    "data": "totalAmount",
                    "render": function (data, type, full, meta) {
                        return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.totalAmountCurrencyName;
                    },
                    "orderable": false
                }
            ],
            "ordering": false,
            "paging": false,
            "pageLength": 3
        });

        $("#generalTable2").DataTable({
            "language": {
                processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                zeroRecords: "Hiçbir kayıt bulunamadı.",
                emptyTable: "Kayıt bulunmamaktadır.",
                search: "Ara:",
                oPaginate: {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "»",
                    "sPrevious": "«"
                },
                sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
            },
            "info": false,
            "processing": true,
            "serverSide": true,
            "searchDelay": 1200,
            "stateSave": true,
            "lengthChange": false,
            "searching": false,
            "stateDuration": -1,
            "ajax": {
                "url": "/Report/MontlyIncomesReport",
                "method": "POST",
                "error": function (error) {
                    $('#generalTable2 tbody')
                        .empty()
                        .append('<tr><td colspan="3" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
                }
            },
            "destroy": true,
            "columns": [
                {
                    "data": "monthName",
                    "orderable": false
                },
                {
                    "data": "count",
                    "orderable": false
                },
                {
                    "data": "totalAmount",
                    "render": function (data, type, full, meta) {
                        return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.totalAmountCurrencyName;
                    },
                    "orderable": false
                }
            ],
            "ordering": false,
            "paging": false,
            "pageLength": 3
        });

        document.getElementById("year").addEventListener('change', (event) => {
            $('#yearTotalExpense').html('<h3 class="card-title" id="yearTotalExpense"><i class="nav-icon fas fa-credit-card"></i>&nbsp;&nbsp;' + document.getElementById("year").value + ' Yılı Toplam Gider Miktarı</h3>');
            $('#yearTotalIncome').html('<h3 class="card-title" id="yearTotalIncome"><i class="nav-icon fas fa-money-bill-wave"></i>&nbsp;&nbsp;' + document.getElementById("year").value + ' Yılı Toplam Gelir Miktarı</h3>');

            var expenseTable = $("#expenseTable").DataTable({
                "language": {
                    processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                    zeroRecords: "Hiçbir kayıt bulunamadı.",
                    emptyTable: "Kayıt bulunmamaktadır.",
                    search: "Ara:",
                    oPaginate: {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "»",
                        "sPrevious": "«"
                    },
                    sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                    sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                },
                "info": false,
                "processing": true,
                "serverSide": true,
                "searchDelay": 1200,
                "stateSave": true,
                "lengthChange": false,
                "searching": false,
                "stateDuration": -1,
                "ajax": {
                    "url": "/Report/YearlyExpenseReport?year=" + document.getElementById("year").value,
                    "method": "POST",
                    "error": function (error) {
                        $('#expenseTable tbody')
                            .empty()
                            .append('<tr><td colspan="2" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
                    }
                },
                "destroy": true,
                "columns": [
                    {
                        "data": "sectorName",
                        "orderable": false
                    },
                    {
                        "data": "totalAmount",
                        "render": function (data, type, full, meta) {
                            return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.totalAmountCurrencyName;
                        },
                        "orderable": false
                    }
                ],
                "ordering": false,
                "paging": false,
                "pageLength": 3
            });

            $.ajax({
                "url": "/Report/YearlyExpenseReportTotalPost?year=" + document.getElementById("year").value,
                "method": "POST"
            }).done(function (response) {
                var data = "";
                response.forEach(element => {
                    data += currency(element.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + element.totalAmountCurrencyName + " + ";
                });
                data = data.substring(0, data.length - 3);
                $('#totalExpense').html(data);
            });

            var incomeTable = $("#incomeTable").DataTable({
                "language": {
                    processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                    zeroRecords: "Hiçbir kayıt bulunamadı.",
                    emptyTable: "Kayıt bulunmamaktadır.",
                    search: "Ara:",
                    oPaginate: {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "»",
                        "sPrevious": "«"
                    },
                    sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                    sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                },
                "info": false,
                "processing": true,
                "serverSide": true,
                "searchDelay": 1200,
                "stateSave": true,
                "lengthChange": false,
                "searching": false,
                "stateDuration": -1,
                "ajax": {
                    "url": "/Report/YearlyIncomeReport?year=" + document.getElementById("year").value,
                    "method": "POST",
                    "error": function (error) {
                        $('#expenseTable tbody')
                            .empty()
                            .append('<tr><td colspan="2" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
                    }
                },
                "destroy": true,
                "columns": [
                    {
                        "data": "sectorName",
                        "orderable": false
                    },
                    {
                        "data": "totalAmount",
                        "render": function (data, type, full, meta) {
                            return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.totalAmountCurrencyName;
                        },
                        "orderable": false
                    }
                ],
                "ordering": false,
                "paging": false,
                "pageLength": 3
            });

            $.ajax({
                "url": "/Report/YearlyIncomeReportTotalPost?year=" + document.getElementById("year").value,
                "method": "POST"
            }).done(function (response) {
                var data = "";
                response.forEach(element => {
                    data += currency(element.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + element.totalAmountCurrencyName + " + ";
                });
                data = data.substring(0, data.length - 3);
                $('#totalIncome').html(data);
            });
        });



        (function () {
            var generateCustomerTable = $("#ItemsTable").DataTable({
                "language": {
                    processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                    zeroRecords: "Hiçbir kayıt bulunamadı.",
                    emptyTable: "Kayıt bulunmamaktadır.",
                    oPaginate: {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "»",
                        "sPrevious": "«"
                    },
                    sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                    sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                },
                "processing": true,
                "serverSide": true,
                "searching": false,
                "lengthChange": false,
                "stateSave": true,
                "stateDuration": -1,
                "ajax": {
                    "url": "/VehiclePurchase/FinishingValorsPost",
                    "method": "POST"
                },
                "columns": [
                    {
                        "data": "id",
                        "orderable": false
                    },
                    { "data": "carModel.carBrand.name", "orderable": false },
                    { "data": "carModel.name", "orderable": false },
                    {
                        "data": "purchaseDate",
                        "orderable": false,
                        render: function (data, type, row) {
                            return window.moment(data).format("DD-MMMM-YYYY");
                        }
                    },
                    {
                        "data": "valorDate",
                        "orderable": false,
                        render: function (data, type, full, meta) {
                            if (data != null) {
                                return data + " gün";
                            }
                            else {
                                return "-";
                            }
                        }
                    },
                    {
                        "data": "valorEndDate",
                        "orderable": false,
                        render: function (data, type, row) {
                            if (data != "0001-01-01T00:00:00") {
                                return window.moment(data).format("DD-MMMM-YYYY");
                            }
                            else {
                                return "-";
                            }
                        }
                    },
                    {
                        "data": "paymentDate",
                        "orderable": false,
                        render: function (data, type, row) {
                            return window.moment(data).format("DD-MMMM-YYYY");
                        }
                    },
                    {
                        "data": "chassis",
                        "orderable": false
                    },
                    {
                        "data": "actionId", render: function (data, type, row) {
                            return '<a href="VehiclePurchase/Details/' + row.id + '" class="text-muted"><i class="fas fa-search"></i></a>'
                        }, "orderable": false
                    }
                ],
                "ordering": true,
                "paging": true,
                "pagingType": "simple_numbers",
                "pageLength": 5
            });
        })(jQuery);

        $.ajax({
            "url": "/MyVehicles/FinishingInspectionDate",
            "method": "POST"
        }).done(function (response) {
            if(response != 0){
                document.getElementById("warningSuccessMessage2").value = "Kontrol Et";
                document.getElementById("swalDefaultWarning2").value = "Muayene tarihi yaklaşan " + response.length + " adet araç bulunmaktadır. Lütfen araçları kontrol ediniz.";
                document.getElementById("swalDefaultWarning2").click();
            }
        });

    })(jQuery);
</script>
}