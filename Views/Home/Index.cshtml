@model IEnumerable<ExpenseManagement.Models.VehiclePurchases>

@{
    ViewData["Title"] = "Ana Sayfa";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-6">
                <div class="info-box mb-3 bg-danger">
                    <span class="info-box-icon"><i class="fas fa-credit-card"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">@DateTime.Now.ToString("MMMM") Ayında Girilen Gider Sayısı</span>
                        <span class="info-box-number" id="monthlyExpenseCount"></span>
                    </div>
                </div>
                <div class="card card-danger">
                    <div class="card-header border-0">
                        <h3 class="card-title"><i class="nav-icon fas fa-credit-card"></i>&nbsp;&nbsp;Son 3 Ayda Sisteme Eklenen Gider Sayısı</h3>
                        <div class="card-tools">
                            <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body table-responsive p-0">
                        <table id="generalTable" class="table table-striped table-valign-middle">
                            <thead>
                                <tr>
                                    <th>
                                        Ay
                                    </th>
                                    <th>
                                        Gider Kalemi
                                    </th>
                                    <th>
                                        Toplam Miktar
                                    </th>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="info-box mb-3 bg-success">
                    <span class="info-box-icon"><i class="fas fa-coins"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">@DateTime.Now.ToString("MMMM") Ayında Girilen Gelir Sayısı</span>
                        <span class="info-box-number" id="monthlyIncomeCount"></span>
                    </div>
                </div>
                @*<div class="card card-primary">
                        <div class="card-header border-0">
                            <h3 class="card-title"><i class="nav-icon fas fa-university"></i>&nbsp;&nbsp;Banka</h3>
                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <canvas id="pieChart" style="min-height: 305px; height: 305px; max-height: 305px; max-width: 100%;"></canvas>
                        </div>
                    </div>*@
                <div class="card card-success">
                    <div class="card-header border-0">
                        <h3 class="card-title"><i class="nav-icon fas fa-coins"></i>&nbsp;&nbsp;Son 3 Ayda Sisteme Eklenen Gelir Sayısı</h3>
                        <div class="card-tools">
                            <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body table-responsive p-0">
                        <table id="generalTable2" class="table table-striped table-valign-middle">
                            <thead>
                                <tr>
                                    <th>
                                        Ay
                                    </th>
                                    <th>
                                        Gelir Kalemi
                                    </th>
                                    <th>
                                        Toplam Miktar
                                    </th>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-primary">
            <div class="card-header border-0">
                <div class="d-flex justify-content-between">
                    <h3 class="card-title">Ödeme Tarihi Gelen Araçlar</h3>
                    <div class="card-tools">
                        <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive p-0">
                    <table id="ItemsTable" class="table table-striped table-valign-middle">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Id)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CarModel.CarBrand.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CarModel.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PurchaseDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ValorDate)
                                </th>
                                <th>
                                    Valör Bitiş Tarihi
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PaymentDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Chassis)
                                </th>
                                <th>
                                    Detaylar
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
<br />

@section Scripts{
    <script src="~/js/datatables.min.js"></script>
    <script src="~/js/moment.min.js"></script>
    <script src="~/Content/NewSite/plugins/chart.js/Chart.min.js"></script>
    <script>
        (function () {
            $.ajax({
                "url": "/Report/MonthlyCountReport",
                "method": "POST"
            }).done(function (response) {
                $('#monthlyExpenseCount').html(response[0]);
                $('#monthlyIncomeCount').html(response[1]);
            });

            //$.ajax({
            //    url: "/Report/BankReport",
            //    dataType: "json",
            //    type: "POST",
            //    contentType: "application/json; charset=utf-8",
            //    success: function (data) {
            //        var amountCurrency = [];

            //        $.each(data, function (index, value) {
            //            amountCurrency.push([value.amountCurrencyName]);
            //        });

            //        var totalAmount = [];

            //        $.each(data, function (index, value) {
            //            totalAmount.push([value.totalAmount]);
            //        });

            //        var backgroundColor = ['#dc3545', '#ff851b', '#001f3f', '#007bff', '#3d9970', '#343a40'];

            //        var donutData = {
            //            labels:
            //                $.each(amountCurrency, function (index, value) {
            //                    value;
            //                }),
            //            datasets: [
            //                {
            //                    data: $.each(totalAmount, function (index, value) {
            //                        totalAmount;
            //                    }),
            //                    backgroundColor: $.each(backgroundColor, function (index, value) {
            //                        backgroundColor
            //                    }),
            //                }
            //            ]
            //        }
            //        var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
            //        var pieData = donutData;
            //        var pieOptions = {
            //            maintainAspectRatio: false,
            //            responsive: true,
            //        }
            //        var pieChart = new Chart(pieChartCanvas, {
            //            type: 'pie',
            //            data: pieData,
            //            options: pieOptions
            //        })
            //    },
            //    error: function (error) {
            //        var donutData = {
            //            labels: ['Kayıt Bulunmamaktadır.'],
            //            datasets: [
            //                {
            //                    data: [100],
            //                    backgroundColor: ['#dc3545'],
            //                }
            //            ]
            //        }
            //        var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
            //        var pieData = donutData;
            //        var pieOptions = {
            //            maintainAspectRatio: false,
            //            responsive: true,
            //        }
            //        var pieChart = new Chart(pieChartCanvas, {
            //            type: 'pie',
            //            data: pieData,
            //            options: pieOptions
            //        })
            //    }
            //})

            $("#generalTable").DataTable({
                "language": {
                    processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                    zeroRecords: "Hiçbir kayıt bulunamadı.",
                    emptyTable: "Kayıt bulunmamaktadır.",
                    search: "Ara:",
                    oPaginate: {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "»",
                        "sPrevious": "«"
                    },
                    sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                    sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                },
                "info": false,
                "processing": true,
                "serverSide": true,
                "searchDelay": 1200,
                "stateSave": true,
                "lengthChange": false,
                "searching": false,
                "stateDuration": -1,
                "ajax": {
                    "url": "/Report/MontlyExpensesReport",
                    "method": "POST",
                    "error": function (error) {
                        $('#generalTable tbody')
                            .empty()
                            .append('<tr><td colspan="3" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
                    }
                },
                "destroy": true,
                "columns": [
                    {
                        "data": "monthName",
                        "orderable": false
                    },
                    {
                        "data": "count",
                        "orderable": false
                    },
                    {
                        "data": "totalAmount",
                        "render": function (data, type, full, meta) {
                            return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.totalAmountCurrencyName;
                        },
                        "orderable": false
                    }
                ],
                "ordering": false,
                "paging": false,
                "pageLength": 3
            });

            $("#generalTable2").DataTable({
                "language": {
                    processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                    zeroRecords: "Hiçbir kayıt bulunamadı.",
                    emptyTable: "Kayıt bulunmamaktadır.",
                    search: "Ara:",
                    oPaginate: {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "»",
                        "sPrevious": "«"
                    },
                    sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                    sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                },
                "info": false,
                "processing": true,
                "serverSide": true,
                "searchDelay": 1200,
                "stateSave": true,
                "lengthChange": false,
                "searching": false,
                "stateDuration": -1,
                "ajax": {
                    "url": "/Report/MontlyIncomesReport",
                    "method": "POST",
                    "error": function (error) {
                        $('#generalTable2 tbody')
                            .empty()
                            .append('<tr><td colspan="3" class="dataTables_empty">Kayıt Bulunmamaktadır.</td></tr>');
                    }
                },
                "destroy": true,
                "columns": [
                    {
                        "data": "monthName",
                        "orderable": false
                    },
                    {
                        "data": "count",
                        "orderable": false
                    },
                    {
                        "data": "totalAmount",
                        "render": function (data, type, full, meta) {
                            return currency(full.totalAmount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.totalAmountCurrencyName;
                        },
                        "orderable": false
                    }
                ],
                "ordering": false,
                "paging": false,
                "pageLength": 3
            });

            (function () {
                var generateCustomerTable = $("#ItemsTable").DataTable({
                    "language": {
                        processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                        zeroRecords: "Hiçbir kayıt bulunamadı.",
                        emptyTable: "Kayıt bulunmamaktadır.",
                        oPaginate: {
                            "sFirst": "İlk",
                            "sLast": "Son",
                            "sNext": "»",
                            "sPrevious": "«"
                        },
                        sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                        sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                    },
                    "processing": true,
                    "serverSide": true,
                    "searching": false,
                    "lengthChange": false,
                    "stateSave": true,
                    "stateDuration": -1,
                    "ajax": {
                        "url": "/VehiclePurchase/FinishingValorsPost",
                        "method": "POST"
                    },
                    "columns": [
                        {
                            "data": "id",
                            "orderable": false
                        },
                        { "data": "carModel.carBrand.name", "orderable": false },
                        { "data": "carModel.name", "orderable": false },
                        {
                            "data": "purchaseDate",
                            "orderable": false,
                            render: function (data, type, row) {
                                return window.moment(data).format("DD-MMMM-YYYY");
                            }
                        },
                        {
                            "data": "valorDate",
                            "orderable": false,
                            render: function (data, type, full, meta) {
                                if (data != null) {
                                    return data + " gün";
                                }
                                else {
                                    return "-";
                                }
                            }
                        },
                        {
                            "data": "valorEndDate",
                            "orderable": false,
                            render: function (data, type, row) {
                                if (data != "0001-01-01T00:00:00") {
                                    return window.moment(data).format("DD-MMMM-YYYY");
                                }
                                else {
                                    return "-";
                                }
                            }
                        },
                        {
                            "data": "paymentDate",
                            "orderable": false,
                            render: function (data, type, row) {
                                return window.moment(data).format("DD-MMMM-YYYY");
                            }
                        },
                        {
                            "data": "chassis",
                            "orderable": false
                        },
                        {
                            "data": "actionId", render: function (data, type, row) {
                                return '<a href="VehiclePurchase/Details/' + row.id + '" class="text-muted"><i class="fas fa-search"></i></a>'
                            }, "orderable": false
                        }
                    ],
                    "ordering": true,
                    "paging": true,
                    "pagingType": "simple_numbers",
                    "pageLength": 5
                });
            })(jQuery);
        })(jQuery);
    </script>
}