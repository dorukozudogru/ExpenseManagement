@model IEnumerable<ExpenseManagement.Models.DepositAccounts>

@{
    ViewData["Title"] = "Vadeli Hesaplar";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <h5 class="box-title">
                            <i class="fas fa-credit-card"></i>&nbsp;Vadeli Hesaplar
                            <a class="btn btn-light text-primary btn-sm float-right" asp-action="Create"><i class="fa fa-plus"></i>&nbsp;&nbsp;Yeni Oluştur</a>
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <div class="card-body">
                                <table id="ItemsTable" class="table table-bordered table-striped" width="100%">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Id)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.BankBranch.Name)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Amount)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.DayOfDeposit)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Interest)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Profit)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.StartDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FinishDate)
                                            </th>
                                            <th>İşlemler</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary collapsed-card">
                    <div class="card-header">
                        <h5 class="card-title">
                            <i class="far fa-credit-card"></i>&nbsp;Vadesi Biten Hesaplar
                        </h5>
                        <div class="card-tools">
                            <a href="#" class="btn btn-tool btn-sm" data-card-widget="collapse">
                                <i class="fas fa-plus"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <div class="card-body">
                                <table id="finished" class="table table-bordered table-striped" width="100%">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Id)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.BankBranch.Name)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Amount)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.DayOfDeposit)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Interest)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Profit)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.StartDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FinishDate)
                                            </th>
                                            <th>İşlemler</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="modal-finish">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title"><strong>Vadeyi Bitirmek İstediğinize Emin misiniz?</strong></h4>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p id="message-finish">&hellip;</p>
                                </div>
                                <div class="modal-footer justify-content-between">
                                    <button type="button" class="btn btn-success" id="finish">Evet</button>
                                    <button type="button" class="btn btn-primary float-right" data-dismiss="modal">Kapat</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    window.onload = function all() {
        $("#ItemsTable").DataTable({
            "language": {
                processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                zeroRecords: "Hiçbir kayıt bulunamadı.",
                emptyTable: "Kayıt bulunmamaktadır.",
                search: "Ara:",
                oPaginate: {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "»",
                    "sPrevious": "«"
                },
                sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
            },
            "processing": true,
            "serverSide": true,
            "searchDelay": 1200,
            "stateSave": true,
            "stateDuration": -1,
            "ajax": {
                "url": "/DepositAccount/Post?isActive=true",
                "method": "POST"
            },
            "columns": [
                { "data": "id" },
                {
                    "data": "bankBranch.name",
                    "orderable": false
                },
                {
                    "data": "amount",
                    "render": function (data, type, full, meta) {
                        return currency(full.amount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.amountCurrencyName;
                    }
                },
                {
                    "data": "dayOfDeposit",
                    "orderable": false
                },
                {
                    "data": "interest",
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        return "%" + currency(full.interest, { decimal: ',', separator: '.', symbol: '' }).format();
                    }
                },
                {
                    "data": "profit",
                    "render": function (data, type, full, meta) {
                        return currency(full.profit, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.profitCurrencyName;
                    }
                },
                {
                    "data": "startDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    }
                },
                {
                    "data": "finishDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    }
                },
                {
                    "data": "actionId", render: function (data, type, row) {
                        return '<div class="btn-group"><button type="button" class="btn" data-toggle="dropdown"><span class="fa fa-angle-down"></span></button></button><ul class="dropdown-menu dropdown-menu-right" style="border: 1px solid #00c0ef"> <a href="#" data-toggle="modal" data-target="#modal-finish" account-id="' + row.id + '" account-branch="' + row.bankBranch.name + '" account-finish-date="' + row.finishDate + '" class="setFinished dropdown-item">Vadeyi Bitir</a><a class="dropdown-item" href="DepositAccount/Edit/' + row.id + '">Güncelle</a><a class="dropdown-item" href="DepositAccount/Delete/' + row.id + '">Sil</a></ul></div>'
                    },
                    "orderable": false
                }
            ],
            "ordering": true,
            "paging": true,
            "pagingType": "simple_numbers",
            "pageLength": 100
        });

        $("#finished").DataTable({
            "language": {
                processing: '<i class="fas fa-sync fa-spin fa-3x fa-fw"></i><span class="sr-only">Yükleniyor...</span> ',
                zeroRecords: "Hiçbir kayıt bulunamadı.",
                emptyTable: "Kayıt bulunmamaktadır.",
                search: "Ara:",
                oPaginate: {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "»",
                    "sPrevious": "«"
                },
                sLengthMenu: "Listelenen maksimum kayıt sayısı: _MENU_",
                sInfo: "Toplam _TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
            },
            "processing": true,
            "serverSide": true,
            "searchDelay": 1200,
            "stateSave": true,
            "searching": false,
            "lengthChange": false,
            "stateDuration": -1,
            "ajax": {
                "url": "/DepositAccount/Post?isActive=false",
                "method": "POST"
            },
            "columns": [
                { "data": "id" },
                {
                    "data": "bankBranch.name",
                    "orderable": false
                },
                {
                    "data": "amount",
                    "render": function (data, type, full, meta) {
                        return currency(full.amount, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.amountCurrencyName;
                    }
                },
                {
                    "data": "dayOfDeposit",
                    "orderable": false
                },
                {
                    "data": "interest",
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        return "%" + currency(full.interest, { decimal: ',', separator: '.', symbol: '' }).format();
                    }
                },
                {
                    "data": "profit",
                    "render": function (data, type, full, meta) {
                        return currency(full.profit, { decimal: ',', separator: '.', symbol: '' }).format() + " " + full.profitCurrencyName;
                    }
                },
                {
                    "data": "startDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    }
                },
                {
                    "data": "finishDate",
                    render: function (data, type, row) {
                        return window.moment(data).format("DD-MMMM-YYYY");
                    }
                },
                {
                    "data": "actionId", render: function (data, type, row) {
                        return '<div class="btn-group"><button type="button" class="btn" data-toggle="dropdown"><span class="fa fa-angle-down"></span></button></button><ul class="dropdown-menu dropdown-menu-right" style="border: 1px solid #00c0ef"> <a class="dropdown-item" href="DepositAccount/Edit/' + row.id + '">Güncelle</a><a class="dropdown-item" href="DepositAccount/Delete/' + row.id + '">Sil</a></ul></div>'
                    },
                    "orderable": false
                }
            ],
            "ordering": true,
            "paging": true,
            "pagingType": "simple_numbers",
            "pageLength": 10
        });

        var finishAccountId;
        var finishBranch;
        var finishDate;

        $(document).delegate('.setFinished','click',function (e) {
            finishAccountId = $(this).attr('account-id');
            finishBranch = $(this).attr('account-branch');
            finishDate = $(this).attr('account-finish-date');

            document.getElementById('message-finish').innerHTML = "<strong>" + finishBranch + "</strong> bankasına/şubesine ait <strong>" + window.moment(finishDate).format("DD-MMMM-YYYY") + "</strong> bitiş tarihli vadeli hesabı bitirmek istediğinizden emin misiniz?";
        });

        $(document).delegate('#finish','click',function (e) {
            $.ajax({
                url: '/DepositAccount/FinishDeposit?id=' + finishAccountId,
                type: 'POST',
                success: function (returnvalue) {
                    $("#modal-finish").modal('hide');
                    document.getElementById("swalDefaultSuccess").value = returnvalue.message;
                    document.getElementById("swalDefaultSuccess").click();
                    setTimeout("location.reload(true);", 2000);
                },
                error: function (error) {
                    $("#modal-finish").modal('hide');
                    document.getElementById("swalDefaultError").value = error.responseText;
                    document.getElementById("swalDefaultError").click();
                }
            });
        });
    }
</script>